@model IEnumerable<WebApplication2.Models.Employees>

<h1>Employee List</h1>
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#employeeModal">
    Create Employee
</button>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>PhoneNo</th>
            <th>Email</th>
            <th>salary</th>
            <th>Address</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>

        @foreach (var employee in Model)
        {
            <tr>
                <td>@employee.Name</td>
                <td>@employee.PhoneNo</td>
                <td>@employee.Email</td>
                <td>@employee.Salary</td>
                <td>@employee.Address</td>
                <td>
                    <button type="button" class="btn btn-primary me-1" data-bs-toggle="modal" data-bs-target="#employeeEditModal" onclick="openEditModal(@employee.Id)">
                        Edit Employee
                    </button>
                    
                    <button type="button" class="btn btn-danger"  onclick="confirmDelete(@employee.Id)">
                      Delete
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>



<!-- Modal -->
<div class="modal fade" id="employeeModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Create Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <form method="post" action="/Employee/Create" id="employeeForm" novalidate>
                <div class="modal-body">
                    
                    <div class="mb-3">
                        <label for="Name" class="form-label">Name</label>
                        <input type="text" class="form-control" id="Name" name="Name"
                               required maxlength="100" />
                        <div class="invalid-feedback">Name is required and must be less than 100 characters.</div>
                    </div>

                    
                    <div class="mb-3">
                        <label for="Email" class="form-label">Email</label>
                        <input type="email" class="form-control" id="Email" name="Email"
                               required />
                        <div class="invalid-feedback">Please enter a valid email address.</div>
                    </div>

                    
                    <div class="mb-3">
                        <label for="PhoneNo" class="form-label">Phone Number</label>
                        <input type="text" class="form-control" id="PhoneNo" name="PhoneNo"
                               pattern="\d{10}" required />
                        <div class="invalid-feedback">Phone number must be exactly 10 digits.</div>
                    </div>

                    
                    <div class="mb-3">
                        <label for="Salary" class="form-label">Salary</label>
                        <input type="number" class="form-control" id="Salary" name="Salary"
                               required min="1000" max="1000000" />
                        <div class="invalid-feedback">Salary must be between 1,000 and 1,000,000.</div>
                    </div>

                    
                    <div class="mb-3">
                        <label for="Address" class="form-label">Address</label>
                        <textarea class="form-control" id="Address" name="Address"
                                  required maxlength="500"></textarea>
                        <div class="invalid-feedback">Address is required and cannot exceed 500 characters.</div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Employee</button>
                </div>
            </form>

        </div>
    </div>
</div>

<!--edit model-->
<div class="modal fade" id="employeeEditModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" action="/Employee/Edit" id="employeeEditForm" novalidate>
                <input type="hidden" id="EditId" name="Id" />
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="EditName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="EditName" name="Name" required maxlength="100" />
                        <div class="invalid-feedback">Name is required and must be less than 100 characters.</div>
                    </div>
                    <div class="mb-3">
                        <label for="EditEmail" class="form-label">Email</label>
                        <input type="email" class="form-control" id="EditEmail" name="Email" required />
                        <div class="invalid-feedback">Please enter a valid email address.</div>
                    </div>
                    <div class="mb-3">
                        <label for="EditPhoneNo" class="form-label">Phone Number</label>
                        <input type="text" class="form-control" id="EditPhoneNo" name="PhoneNo" pattern="\d{10}" required />
                        <div class="invalid-feedback">Phone number must be exactly 10 digits.</div>
                    </div>
                    <div class="mb-3">
                        <label for="EditSalary" class="form-label">Salary</label>
                        <input type="number" class="form-control" id="EditSalary" name="Salary" required min="1000" max="1000000" />
                        <div class="invalid-feedback">Salary must be between 1,000 and 1,000,000.</div>
                    </div>
                    <div class="mb-3">
                        <label for="EditAddress" class="form-label">Address</label>
                        <textarea class="form-control" id="EditAddress" name="Address" required maxlength="500"></textarea>
                        <div class="invalid-feedback">Address is required and cannot exceed 500 characters.</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Update Employee</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.getElementById('employeeForm').onsubmit = function (e) {
        e.preventDefault();
        var formData = new FormData(this);

        fetch('/Employee/Create', {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    document.getElementById('employeeForm').reset();

                    var modalElement = document.getElementById('employeeModal');
                    var modalInstance = bootstrap.Modal.getInstance(modalElement);
                    if (modalInstance) {
                        modalInstance.hide();
                    }

                    location.reload();
                } else {
                    alert('Error: ' + data.message);
                }
            })
            .catch(error => console.error('Error:', error));
    };


    function openEditModal(id) {
        fetch(`/Employee/EmployeeById/${id}`)
            .then(response => response.json())
            .then(data => {
                if (data.success === false) {
                    alert(data.message);
                    return;
                }
                document.getElementById('EditId').value = data.id;
                document.getElementById('EditName').value = data.name;
                document.getElementById('EditEmail').value = data.email;
                document.getElementById('EditPhoneNo').value = data.phoneNo;
                document.getElementById('EditSalary').value = data.salary;
                document.getElementById('EditAddress').value = data.address;

                var modal = new bootstrap.Modal(document.getElementById('employeeEditModal'));
                modal.show();
            })
            .catch(error => console.error('Error:', error));
    }

     document.getElementById('employeeEditForm').onsubmit = function (e) {
        e.preventDefault();
        var formData = new FormData(this);

        fetch(`/Employee/Edit`, {
            method: 'PUT',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                alert(data.message);
                if (data.success) location.reload();
            });
    };

    function confirmDelete(id) {
        if (confirm('Are you sure you want to delete this employee?')) {
            fetch(`/Employee/Delete/${id}`, {
                method: 'DELETE'
            })
                .then(response => response.json())
                .then(data => {
                    alert(data.message);
                    if (data.success) {
                        location.reload();
                    }
                })
                .catch(error => console.error('Error:', error));
        }
    }

    (function () {
        'use strict';
        const form = document.getElementById('employeeForm');   

        form.addEventListener('submit', function (event) {
            if (!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
            }
            form.classList.add('was-validated');
        });
    })();

    (function () {
        'use strict';
        const form = document.getElementById('employeeEditForm');

        form.addEventListener('submit', function (event) {
            if (!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
            }
            form.classList.add('was-validated');
        });
    })();


</script>

